REPORT DIAGNOSI WHATSAPP MODAL - WineNode
Data: 28/09/2025 15:36
Versione: 1.1.0

=== 1. FILE RIEPILOGO ORDINE IDENTIFICATO ===
File principale: src/pages/RiepilogoOrdinePage.tsx
- Componente: RiepilogoOrdinePage (default export)
- Pulsante "Conferma Ordine": linea 271, onClick={handleConferma}
- Handler attuale: handleConferma (linea 257)
- Layout: Footer con 2 pulsanti (Indietro + Conferma Ordine)
- Stili: Inline styles, responsive font-size, flex layout

Struttura pulsanti:
- Container: <div className="flex flex-nowrap gap-3">
- Pulsante Indietro: background white, border, flex: 1
- Pulsante Conferma: background green (#16a34a), flex: 1
- Responsive: fontSize 13px mobile, 16px desktop
- Touch targets: minHeight 44px, minWidth 120px

=== 2. COMPONENTI MODALI ESISTENTI ===
Directory: src/components/modals/
Modali disponibili:
- ConfirmArchiveModal.tsx (RIUTILIZZABILE)
- ConfermaEliminazioneModal.tsx
- CarrelloOrdiniModal.tsx
- NuovoOrdineModal.tsx
- SmartGestisciModal.tsx

Pattern modale standard identificato:
- Struttura: fixed inset-0, z-[60], flex center
- Overlay: bg-black/50, backdrop-blur-sm, onClick close
- Container: relative, bg white, rounded-xl, shadow-xl
- Header: padding, border-bottom, icona + titolo
- Body: padding, contenuto
- Footer: padding, border-top, pulsanti flex

Stili coerenti:
- Z-index: 60 per modali
- Background: #fff9dc (tema light)
- Bordi: #e2d6aa
- Colori testo: #541111 primario, #7a4a30 secondario

=== 3. FONTE DATI ORDINE ===
Stato ordine in RiepilogoOrdinePage:
- Source: location.state (da navigate con state)
- Interfaccia: LocationState { ordineItems: OrdineItem[], totalBottiglie: number }
- OrdineItem: { wineId: string, quantity: number, unit: 'bottiglie'|'cartoni' }

Dati disponibili per messaggio:
- ordineItems: array con wineId, quantity, unit
- wines: array da useWines() hook
- wine.name: nome vino
- wine.vintage: annata (opzionale)
- wine.description: produttore/descrizione
- wine.cost: prezzo (DA NON USARE nel messaggio)

Calcolo dettagli ordine (linea 25-40):
- Mapping ordineItems -> ordineDetails
- Include: wineName, quantity, unit, totalPrice
- totalPrice PRESENTE ma da escludere dal messaggio WhatsApp

=== 4. STILI E SAFE-AREA ===
Safe-area mobile:
- Footer: padding-bottom con env(safe-area-inset-bottom)
- Z-index navbar: var(--z-navbar)
- Modali: z-[60] (superiore a navbar)

Layout responsive:
- Mobile â‰¤767px: font 13px, layout compatto
- Desktop >767px: font 16px, spaziature maggiori
- Touch targets: â‰¥44px per accessibilitÃ 

Palette colori (tema light):
- Background: #fff9dc
- Superficie: #fff2b8
- Bordi: #e2d6aa
- Testo primario: #541111
- Testo secondario: #7a4a30
- Accent verde: #16a34a
- Danger rosso: #d33b2f

=== 5. VINCOLI IDENTIFICATI ===
Layout esistente da preservare:
- Footer pulsanti: posizione, dimensioni, stili invariati
- handleConferma attuale: logica da mantenere + aggiungere modale
- Responsive behavior: font-size dinamico da preservare
- Safe-area: compensazioni esistenti da rispettare

Dipendenze esistenti:
- React Router: useNavigate, useLocation, useParams
- Lucide React: icone (Check, AlertTriangle disponibili)
- Hooks: useWines, useOrdini (contexts)
- Nessuna libreria modale esterna

=== 6. PIANO IMPLEMENTAZIONE ===
Componente da creare:
- WhatsAppOrderModal.tsx in src/components/modals/
- Pattern: riutilizza struttura ConfirmArchiveModal
- Props: isOpen, onClose, orderData, supplierName

Funzione utility da creare:
- buildWhatsAppMessage.ts in src/utils/
- Input: orderDetails, date
- Output: string formattato per WhatsApp
- Esclude prezzi, include solo nome+annata+quantitÃ +unitÃ 

Modifiche RiepilogoOrdinePage:
- Stato: isWhatsAppModalOpen (useState)
- Handler: openWhatsAppModal, closeWhatsAppModal
- Modifica handleConferma: apri modale invece di azione diretta
- Import: nuovo componente WhatsAppOrderModal

=== 7. STRUTTURA MESSAGGIO IDENTIFICATA ===
Dati disponibili per messaggio:
- Fornitore: supplier param da URL
- Data: new Date().toLocaleDateString('it-IT')
- Lista vini: ordineDetails.map(item => item.wineName + quantity + unit)

Formato testo:
Camera con Vista
Ordine vini
Data: DD/MM/YYYY
â€¢ {wineName} {vintage} â€” x{quantity} {unit}

Esempio con dati reali:
Camera con Vista
Ordine vini  
Data: 28/09/2025
â€¢ ARNEIS ROERO DOCG 2019 â€” x1 bottiglie
â€¢ FRANCIACORTA BRUT MAGNUM â€” x2 cartoni

=== 8. COMPATIBILITÃ€ WHATSAPP ===
Link format da implementare:
- Primario: https://wa.me/?text={encodedMessage}
- Fallback: whatsapp://send?text={encodedMessage}
- Encoding: encodeURIComponent() per caratteri speciali
- Apertura: window.open() con target _blank

Limiti tecnici:
- Lunghezza messaggio: WhatsApp supporta ~65k caratteri
- Caratteri speciali: encoding UTF-8 corretto
- Mobile/Desktop: wa.me funziona su entrambi

=== 9. CONCLUSIONI DIAGNOSI ===
FATTIBILITÃ€: âœ… ALTA
- Pattern modali esistenti riutilizzabili
- Dati ordine completi e accessibili
- Layout preservabile senza modifiche strutturali
- Nessuna dipendenza esterna necessaria

COMPLESSITÃ€: ðŸŸ¡ MEDIA
- Nuovo componente modale (pattern esistente)
- Funzione utility per messaggio (logica semplice)
- Modifica handler esistente (chirurgica)
- Test compatibilitÃ  WhatsApp (standard)

RISCHI: ðŸŸ¢ BASSI
- Zero impatto su layout esistente
- Logica isolata in componenti separati
- Rollback semplice (rimuovi modale + ripristina handler)
- Nessuna modifica a calcoli/prezzi esistenti

PROSSIMI STEP:
1. Creare branch feature/ordine-whatsapp-modal
2. Implementare WhatsAppOrderModal component
3. Creare buildWhatsAppMessage utility
4. Modificare RiepilogoOrdinePage handler
5. Test manuale su mobile/desktop
6. QA e commit atomici

FILE DA CREARE:
- src/components/modals/WhatsAppOrderModal.tsx
- src/utils/buildWhatsAppMessage.ts

FILE DA MODIFICARE:
- src/pages/RiepilogoOrdinePage.tsx (handler + stato + import)

PATTERN DA SEGUIRE:
- Struttura modale: ConfirmArchiveModal.tsx
- Stili: tema light esistente (#fff9dc, #541111, etc)
- Z-index: 60 (standard modali)
- Safe-area: rispettare compensazioni esistenti
